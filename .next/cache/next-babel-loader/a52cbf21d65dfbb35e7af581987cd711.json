{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport axios from 'axios';\nvar userInitialState = {};\nvar LOGOUT = 'LOGOUT';\n\nfunction userReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : userInitialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOGOUT:\n      {\n        return {};\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n} // action creators\n\n\nexport function logout() {\n  return function (dispatch) {\n    axios.post('/logout').then(function (resp) {\n      if (resp.status === 200) {\n        dispatch({\n          type: LOGOUT\n        });\n      } else {\n        console.log('logout failed', resp);\n      }\n    })[\"catch\"](function (error) {\n      console.log('logout error', error);\n    });\n  };\n}\nvar allReducers = combineReducers({\n  user: userReducer\n});\nexport default function initializeStore(state) {\n  var store = createStore(allReducers, Object.assign({}, {\n    user: userInitialState\n  }, state), composeWithDevTools(applyMiddleware(ReduxThunk)));\n  return store;\n}","map":{"version":3,"sources":["/Users/lili/projects/nextjs-koa/store/store.js"],"names":["createStore","combineReducers","applyMiddleware","ReduxThunk","composeWithDevTools","axios","userInitialState","LOGOUT","userReducer","state","action","type","logout","dispatch","post","then","resp","status","console","log","error","allReducers","user","initializeStore","store","Object","assign"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,gBAAgB,GAAG,EAAzB;AACA,IAAMC,MAAM,GAAG,QAAf;;AACA,SAASC,WAAT,GAAuD;AAAA,MAAlCC,KAAkC,uEAA1BH,gBAA0B;AAAA,MAARI,MAAQ;;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,MAAL;AAAa;AACT,eAAO,EAAP;AACH;;AACD;AAAS;AACL,eAAOE,KAAP;AACH;AANL;AAQH,C,CAED;;;AACA,OAAO,SAASG,MAAT,GAAkB;AACrB,SAAO,UAAAC,QAAQ,EAAI;AACfR,IAAAA,KAAK,CAACS,IAAN,CAAW,SAAX,EACKC,IADL,CACU,UAAAC,IAAI,EAAI;AACV,UAAIA,IAAI,CAACC,MAAL,KAAgB,GAApB,EAAyB;AACrBJ,QAAAA,QAAQ,CAAC;AACLF,UAAAA,IAAI,EAAEJ;AADD,SAAD,CAAR;AAGH,OAJD,MAIO;AACHW,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BH,IAA5B;AACH;AACJ,KATL,WAUW,UAAAI,KAAK,EAAI;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BC,KAA5B;AACH,KAZL;AAaH,GAdD;AAeH;AAED,IAAMC,WAAW,GAAGpB,eAAe,CAAC;AAChCqB,EAAAA,IAAI,EAAEd;AAD0B,CAAD,CAAnC;AAIA,eAAe,SAASe,eAAT,CAAyBd,KAAzB,EAAgC;AAC3C,MAAMe,KAAK,GAAGxB,WAAW,CACrBqB,WADqB,EAErBI,MAAM,CAACC,MAAP,CACI,EADJ,EAEI;AAAEJ,IAAAA,IAAI,EAAEhB;AAAR,GAFJ,EAGIG,KAHJ,CAFqB,EAOrBL,mBAAmB,CAACF,eAAe,CAACC,UAAD,CAAhB,CAPE,CAAzB;AAUA,SAAOqB,KAAP;AACH","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport ReduxThunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport axios from 'axios'\n\nconst userInitialState = {}\nconst LOGOUT = 'LOGOUT'\nfunction userReducer(state = userInitialState, action) {\n    switch (action.type) {\n        case LOGOUT: {\n            return {}\n        }\n        default: {\n            return state\n        }\n    }\n}\n\n// action creators\nexport function logout() {\n    return dispatch => {\n        axios.post('/logout')\n            .then(resp => {\n                if (resp.status === 200) {\n                    dispatch({\n                        type: LOGOUT\n                    })\n                } else {\n                    console.log('logout failed',resp)\n                }\n            })\n            .catch(error => {\n                console.log('logout error', error)\n            })\n    }\n}\n\nconst allReducers = combineReducers({\n    user: userReducer\n})\n\nexport default function initializeStore(state) {\n    const store = createStore(\n        allReducers,\n        Object.assign(\n            {},\n            { user: userInitialState },\n            state\n        ),\n        composeWithDevTools(applyMiddleware(ReduxThunk))\n    )\n\n    return store\n}"]},"metadata":{},"sourceType":"module"}