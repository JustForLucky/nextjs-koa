{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport axios from 'axios';\nconst userInitialState = {};\nconst LOGOUT = 'LOGOUT';\n\nfunction userReducer(state = userInitialState, action) {\n  switch (action.type) {\n    default:\n      {\n        return state;\n      }\n  }\n} // action creators\n\n\nexport function logout() {}\nconst allReducers = combineReducers({\n  user: userReducer\n});\nexport default function initializeStore(state) {\n  const store = createStore(allReducers, Object.assign({}, {\n    user: userInitialState\n  }, state), composeWithDevTools(applyMiddleware(ReduxThunk)));\n  return store;\n}","map":{"version":3,"sources":["/Users/lili/projects/nextjs-koa/store/store.js"],"names":["createStore","combineReducers","applyMiddleware","ReduxThunk","composeWithDevTools","axios","userInitialState","LOGOUT","userReducer","state","action","type","logout","allReducers","user","initializeStore","store","Object","assign"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,gBAAgB,GAAG,EAAzB;AACA,MAAMC,MAAM,GAAG,QAAf;;AACA,SAASC,WAAT,CAAqBC,KAAK,GAAGH,gBAA7B,EAA+CI,MAA/C,EAAuD;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI;AAAS;AACL,eAAOF,KAAP;AACH;AAHL;AAKH,C,CAED;;;AACA,OAAO,SAASG,MAAT,GAAkB,CAExB;AAED,MAAMC,WAAW,GAAGZ,eAAe,CAAC;AAChCa,EAAAA,IAAI,EAAEN;AAD0B,CAAD,CAAnC;AAIA,eAAe,SAASO,eAAT,CAAyBN,KAAzB,EAAgC;AAC3C,QAAMO,KAAK,GAAGhB,WAAW,CACrBa,WADqB,EAErBI,MAAM,CAACC,MAAP,CACI,EADJ,EAEI;AAAEJ,IAAAA,IAAI,EAAER;AAAR,GAFJ,EAGIG,KAHJ,CAFqB,EAOrBL,mBAAmB,CAACF,eAAe,CAACC,UAAD,CAAhB,CAPE,CAAzB;AAUA,SAAOa,KAAP;AACH","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport ReduxThunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport axios from 'axios'\n\nconst userInitialState = {}\nconst LOGOUT = 'LOGOUT'\nfunction userReducer(state = userInitialState, action) {\n    switch (action.type) {\n        default: {\n            return state\n        }\n    }\n}\n\n// action creators\nexport function logout() {\n\n}\n\nconst allReducers = combineReducers({\n    user: userReducer\n})\n\nexport default function initializeStore(state) {\n    const store = createStore(\n        allReducers,\n        Object.assign(\n            {},\n            { user: userInitialState },\n            state\n        ),\n        composeWithDevTools(applyMiddleware(ReduxThunk))\n    )\n\n    return store\n}"]},"metadata":{},"sourceType":"module"}