{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport createStore from '../store/store';\nconst isServer = true;\nconst __NEXT_REDUX_STORE__ = '__NEXT_REDUX_STORE__';\n\nfunction getOrCreateStore(initialState) {\n  if (isServer) {\n    return createStore(initialState);\n  }\n\n  if (!window[__NEXT_REDUX_STORE__]) {\n    window[__NEXT_REDUX_STORE__] = createStore(initialState);\n  }\n\n  return window[__NEXT_REDUX_STORE__];\n}\n\nexport default (Comp => {\n  class WithReduxApp extends React.Component {\n    constructor(props) {\n      super(props);\n      this.reduxStore = getOrCreateStore(props.initialReduxState);\n    }\n\n    render() {\n      const _this$props = this.props,\n            {\n        Component,\n        pageProps\n      } = _this$props,\n            rest = _objectWithoutProperties(_this$props, [\"Component\", \"pageProps\"]);\n\n      return __jsx(Comp, _extends({\n        Component: Component,\n        pageProps: pageProps\n      }, rest, {\n        reduxStore: this.reduxStore\n      }));\n    }\n\n  }\n\n  WithReduxApp.getInitialProps = async ctx => {\n    const reduxStore = getOrCreateStore();\n    ctx.reduxStore = reduxStore;\n    let appProps = {};\n\n    if (typeof Comp.getInitialProps === 'function') {\n      appProps = await Comp.getInitialProps(ctx);\n    }\n\n    return _objectSpread(_objectSpread({}, appProps), {}, {\n      initialReduxState: reduxStore.getState()\n    });\n  };\n\n  return WithReduxApp;\n});","map":{"version":3,"sources":["/Users/lili/projects/nextjs-koa/lib/with-redux.js"],"names":["React","createStore","isServer","__NEXT_REDUX_STORE__","getOrCreateStore","initialState","window","Comp","WithReduxApp","Component","constructor","props","reduxStore","initialReduxState","render","pageProps","rest","getInitialProps","ctx","appProps","getState"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,QAAQ,OAAd;AACA,MAAMC,oBAAoB,GAAG,sBAA7B;;AAEA,SAASC,gBAAT,CAA0BC,YAA1B,EAAwC;AACpC,MAAIH,QAAJ,EAAc;AACV,WAAOD,WAAW,CAACI,YAAD,CAAlB;AACH;;AACD,MAAI,CAACC,MAAM,CAACH,oBAAD,CAAX,EAAmC;AAC/BG,IAAAA,MAAM,CAACH,oBAAD,CAAN,GAA+BF,WAAW,CAACI,YAAD,CAA1C;AACH;;AACD,SAAOC,MAAM,CAACH,oBAAD,CAAb;AACH;;AAED,gBAAeI,IAAI,IAAI;AACnB,QAAMC,YAAN,SAA2BR,KAAK,CAACS,SAAjC,CAA2C;AACvCC,IAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,YAAMA,KAAN;AACA,WAAKC,UAAL,GAAkBR,gBAAgB,CAACO,KAAK,CAACE,iBAAP,CAAlC;AACH;;AACDC,IAAAA,MAAM,GAAG;AACL,0BAA0C,KAAKH,KAA/C;AAAA,YAAM;AAAEF,QAAAA,SAAF;AAAaM,QAAAA;AAAb,OAAN;AAAA,YAAiCC,IAAjC;;AACA,aACI,MAAC,IAAD;AACI,QAAA,SAAS,EAAEP,SADf;AAEI,QAAA,SAAS,EAAEM;AAFf,SAGQC,IAHR;AAII,QAAA,UAAU,EAAE,KAAKJ;AAJrB,SADJ;AAQH;;AAfsC;;AAkB3CJ,EAAAA,YAAY,CAACS,eAAb,GAA+B,MAAMC,GAAN,IAAa;AACxC,UAAMN,UAAU,GAAGR,gBAAgB,EAAnC;AACAc,IAAAA,GAAG,CAACN,UAAJ,GAAiBA,UAAjB;AAEA,QAAIO,QAAQ,GAAG,EAAf;;AACA,QAAI,OAAOZ,IAAI,CAACU,eAAZ,KAAgC,UAApC,EAAgD;AAC5CE,MAAAA,QAAQ,GAAG,MAAMZ,IAAI,CAACU,eAAL,CAAqBC,GAArB,CAAjB;AACH;;AAED,2CACOC,QADP;AAEIN,MAAAA,iBAAiB,EAAED,UAAU,CAACQ,QAAX;AAFvB;AAIH,GAbD;;AAeA,SAAOZ,YAAP;AACH,CAnCD","sourcesContent":["import React from 'react'\nimport createStore from '../store/store'\n\nconst isServer = typeof window === 'undefined'\nconst __NEXT_REDUX_STORE__ = '__NEXT_REDUX_STORE__'\n\nfunction getOrCreateStore(initialState) {\n    if (isServer) {\n        return createStore(initialState)\n    }\n    if (!window[__NEXT_REDUX_STORE__]) {\n        window[__NEXT_REDUX_STORE__] = createStore(initialState)\n    }\n    return window[__NEXT_REDUX_STORE__]\n}\n\nexport default Comp => {\n    class WithReduxApp extends React.Component {\n        constructor(props) {\n            super(props)\n            this.reduxStore = getOrCreateStore(props.initialReduxState)\n        }\n        render() {\n            const { Component, pageProps, ...rest } = this.props\n            return (\n                <Comp\n                    Component={Component}\n                    pageProps={pageProps}\n                    {...rest}\n                    reduxStore={this.reduxStore}\n                />\n            )\n        }\n    }\n\n    WithReduxApp.getInitialProps = async ctx => {\n        const reduxStore = getOrCreateStore()\n        ctx.reduxStore = reduxStore\n\n        let appProps = {}\n        if (typeof Comp.getInitialProps === 'function') {\n            appProps = await Comp.getInitialProps(ctx)\n        }\n\n        return {\n            ...appProps,\n            initialReduxState: reduxStore.getState()\n        }\n    }\n\n    return WithReduxApp\n}"]},"metadata":{},"sourceType":"module"}