{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport chalk from \"chalk\";\nimport App from \"next/app\";\nimport { Provider } from \"react-redux\";\nimport Router from 'next/router';\nimport \"antd/dist/antd.css\";\nimport MyContext from \"../lib/my-context\";\nimport Layout from \"../components/Layout\";\nimport PageLoading from '../components/PageLoading';\nimport withRedux from \"../lib/with-redux\";\n\nclass MyApp extends App {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      loading: false\n    });\n\n    _defineProperty(this, \"startLoading\", () => {\n      this.setState({\n        loading: true\n      });\n    });\n\n    _defineProperty(this, \"stopLoading\", () => {\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  static async getInitialProps(ctx) {\n    const {\n      Component\n    } = ctx;\n    console.log(chalk.green(\"app init\"));\n    let pageProps = {};\n\n    if (Component && Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    return {\n      pageProps\n    };\n  }\n\n  componentDidMount() {\n    Router.events.on('routerChangeStart', this.startLoading);\n    Router.events.on('routerChangeComplete', this.stopLoading);\n    Router.events.on('routerChangeError', this.stopLoading);\n  }\n\n  componentWillUnmount() {\n    Router.events.off('routerChangeStart', this.startLoading);\n    Router.events.off('routerChangeComplete', this.stopLoading);\n    Router.events.off('routerChangeError', this.stopLoading);\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      reduxStore\n    } = this.props;\n    return __jsx(Provider, {\n      store: reduxStore\n    }, __jsx(PageLoading, null), __jsx(Layout, null, __jsx(Component, pageProps)));\n  }\n\n}\n\nexport default withRedux(MyApp);","map":{"version":3,"sources":["/Users/lili/projects/nextjs-koa/pages/_app.js"],"names":["chalk","App","Provider","Router","MyContext","Layout","PageLoading","withRedux","MyApp","loading","setState","getInitialProps","ctx","Component","console","log","green","pageProps","componentDidMount","events","on","startLoading","stopLoading","componentWillUnmount","off","render","reduxStore","props"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAO,oBAAP;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;;AAEA,MAAMC,KAAN,SAAoBP,GAApB,CAAwB;AAAA;AAAA;;AAAA,mCAYd;AACNQ,MAAAA,OAAO,EAAE;AADH,KAZc;;AAAA,0CAyBP,MAAM;AACnB,WAAKC,QAAL,CAAc;AAAED,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KA3BqB;;AAAA,yCA4BR,MAAM;AAClB,WAAKC,QAAL,CAAc;AAAED,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KA9BqB;AAAA;;AACtB,eAAaE,eAAb,CAA6BC,GAA7B,EAAkC;AAChC,UAAM;AAAEC,MAAAA;AAAF,QAAgBD,GAAtB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYf,KAAK,CAACgB,KAAN,CAAY,UAAZ,CAAZ;AACA,QAAIC,SAAS,GAAG,EAAhB;;AACA,QAAIJ,SAAS,IAAIA,SAAS,CAACF,eAA3B,EAA4C;AAC1CM,MAAAA,SAAS,GAAG,MAAMJ,SAAS,CAACF,eAAV,CAA0BC,GAA1B,CAAlB;AACD;;AACD,WAAO;AACLK,MAAAA;AADK,KAAP;AAGD;;AAIDC,EAAAA,iBAAiB,GAAG;AAClBf,IAAAA,MAAM,CAACgB,MAAP,CAAcC,EAAd,CAAiB,mBAAjB,EAAsC,KAAKC,YAA3C;AACAlB,IAAAA,MAAM,CAACgB,MAAP,CAAcC,EAAd,CAAiB,sBAAjB,EAAyC,KAAKE,WAA9C;AACAnB,IAAAA,MAAM,CAACgB,MAAP,CAAcC,EAAd,CAAiB,mBAAjB,EAAsC,KAAKE,WAA3C;AACD;;AACDC,EAAAA,oBAAoB,GAAG;AACrBpB,IAAAA,MAAM,CAACgB,MAAP,CAAcK,GAAd,CAAkB,mBAAlB,EAAuC,KAAKH,YAA5C;AACAlB,IAAAA,MAAM,CAACgB,MAAP,CAAcK,GAAd,CAAkB,sBAAlB,EAA0C,KAAKF,WAA/C;AACAnB,IAAAA,MAAM,CAACgB,MAAP,CAAcK,GAAd,CAAkB,mBAAlB,EAAuC,KAAKF,WAA5C;AACD;;AAODG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEZ,MAAAA,SAAF;AAAaI,MAAAA,SAAb;AAAwBS,MAAAA;AAAxB,QAAuC,KAAKC,KAAlD;AAEA,WACE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAED;AAAjB,OACE,MAAC,WAAD,OADF,EAEE,MAAC,MAAD,QACE,MAAC,SAAD,EAAeT,SAAf,CADF,CAFF,CADF;AAQD;;AA1CqB;;AA6CxB,eAAeV,SAAS,CAACC,KAAD,CAAxB","sourcesContent":["import chalk from \"chalk\"\nimport App from \"next/app\"\nimport { Provider } from \"react-redux\"\nimport Router from 'next/router'\nimport \"antd/dist/antd.css\"\nimport MyContext from \"../lib/my-context\"\nimport Layout from \"../components/Layout\"\nimport PageLoading from '../components/PageLoading'\nimport withRedux from \"../lib/with-redux\"\n\nclass MyApp extends App {\n  static async getInitialProps(ctx) {\n    const { Component } = ctx;\n    console.log(chalk.green(\"app init\"));\n    let pageProps = {};\n    if (Component && Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n    return {\n      pageProps,\n    };\n  }\n  state = {\n    loading: false\n  }\n  componentDidMount() {\n    Router.events.on('routerChangeStart', this.startLoading)\n    Router.events.on('routerChangeComplete', this.stopLoading)\n    Router.events.on('routerChangeError', this.stopLoading)\n  }\n  componentWillUnmount() {\n    Router.events.off('routerChangeStart', this.startLoading)\n    Router.events.off('routerChangeComplete', this.stopLoading)\n    Router.events.off('routerChangeError', this.stopLoading)\n  }\n  startLoading = () => {\n    this.setState({ loading: true })\n  }\n  stopLoading = () => {\n    this.setState({ loading: false })\n  }\n  render() {\n    const { Component, pageProps, reduxStore } = this.props;\n\n    return (\n      <Provider store={reduxStore}>\n        <PageLoading />\n        <Layout>\n          <Component {...pageProps} />\n        </Layout>\n      </Provider>\n    );\n  }\n}\n\nexport default withRedux(MyApp);\n"]},"metadata":{},"sourceType":"module"}