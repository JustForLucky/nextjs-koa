{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport chalk from \"chalk\";\nimport App from \"next/app\";\nimport { Provider } from \"react-redux\";\nimport Router from 'next/router';\nimport Link from 'next/link';\nimport axios from 'axios';\nimport \"antd/dist/antd.css\";\nimport MyContext from \"../lib/my-context\";\nimport Layout from \"../components/Layout\";\nimport PageLoading from '../components/PageLoading';\nimport withRedux from \"../lib/with-redux\";\n\nclass MyApp extends App {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      loading: false\n    });\n\n    _defineProperty(this, \"startLoading\", () => {\n      this.setState({\n        loading: true\n      });\n    });\n\n    _defineProperty(this, \"stopLoading\", () => {\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  static async getInitialProps(ctx) {\n    const {\n      Component\n    } = ctx;\n    console.log(chalk.green(\"app init\"));\n    let pageProps = {};\n\n    if (Component && Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    return {\n      pageProps\n    };\n  }\n\n  componentDidMount() {\n    Router.events.on('routeChangeStart', this.startLoading);\n    Router.events.on('routeChangeComplete', this.stopLoading);\n    Router.events.on('routeChangeError', this.stopLoading);\n    axios.get('/github/search/repositories?q=react').then(resp => {\n      console.log(resp);\n    });\n  }\n\n  componentWillUnmount() {\n    Router.events.off('routeChangeStart', this.startLoading);\n    Router.events.off('routeChangeComplete', this.stopLoading);\n    Router.events.off('routeChangeError', this.stopLoading);\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      reduxStore\n    } = this.props;\n    return __jsx(Provider, {\n      store: reduxStore\n    }, this.state.loading ? __jsx(PageLoading, null) : null, __jsx(Layout, null, __jsx(Link, {\n      href: \"/\"\n    }, __jsx(\"a\", null, \"Index\")), __jsx(Link, {\n      href: \"/detail\"\n    }, __jsx(\"a\", null, \"Detail\")), __jsx(Component, pageProps)));\n  }\n\n}\n\nexport default withRedux(MyApp);","map":{"version":3,"sources":["/Users/lili/projects/nextjs-koa/pages/_app.js"],"names":["chalk","App","Provider","Router","Link","axios","MyContext","Layout","PageLoading","withRedux","MyApp","loading","setState","getInitialProps","ctx","Component","console","log","green","pageProps","componentDidMount","events","on","startLoading","stopLoading","get","then","resp","componentWillUnmount","off","render","reduxStore","props","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;;AAEA,MAAMC,KAAN,SAAoBT,GAApB,CAAwB;AAAA;AAAA;;AAAA,mCAYd;AACNU,MAAAA,OAAO,EAAE;AADH,KAZc;;AAAA,0CA6BP,MAAM;AACnB,WAAKC,QAAL,CAAc;AAAED,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KA/BqB;;AAAA,yCAgCR,MAAM;AAClB,WAAKC,QAAL,CAAc;AAAED,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAlCqB;AAAA;;AACtB,eAAaE,eAAb,CAA6BC,GAA7B,EAAkC;AAChC,UAAM;AAAEC,MAAAA;AAAF,QAAgBD,GAAtB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAK,CAACkB,KAAN,CAAY,UAAZ,CAAZ;AACA,QAAIC,SAAS,GAAG,EAAhB;;AACA,QAAIJ,SAAS,IAAIA,SAAS,CAACF,eAA3B,EAA4C;AAC1CM,MAAAA,SAAS,GAAG,MAAMJ,SAAS,CAACF,eAAV,CAA0BC,GAA1B,CAAlB;AACD;;AACD,WAAO;AACLK,MAAAA;AADK,KAAP;AAGD;;AAIDC,EAAAA,iBAAiB,GAAG;AAClBjB,IAAAA,MAAM,CAACkB,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC,KAAKC,YAA1C;AACApB,IAAAA,MAAM,CAACkB,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwC,KAAKE,WAA7C;AACArB,IAAAA,MAAM,CAACkB,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC,KAAKE,WAA1C;AACAnB,IAAAA,KAAK,CAACoB,GAAN,CAAU,qCAAV,EACGC,IADH,CACQC,IAAI,IAAI;AACZX,MAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ;AACD,KAHH;AAID;;AACDC,EAAAA,oBAAoB,GAAG;AACrBzB,IAAAA,MAAM,CAACkB,MAAP,CAAcQ,GAAd,CAAkB,kBAAlB,EAAsC,KAAKN,YAA3C;AACApB,IAAAA,MAAM,CAACkB,MAAP,CAAcQ,GAAd,CAAkB,qBAAlB,EAAyC,KAAKL,WAA9C;AACArB,IAAAA,MAAM,CAACkB,MAAP,CAAcQ,GAAd,CAAkB,kBAAlB,EAAsC,KAAKL,WAA3C;AACD;;AAODM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEf,MAAAA,SAAF;AAAaI,MAAAA,SAAb;AAAwBY,MAAAA;AAAxB,QAAuC,KAAKC,KAAlD;AACA,WACE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAED;AAAjB,OAEI,KAAKE,KAAL,CAAWtB,OAAX,GACC,MAAC,WAAD,OADD,GACoB,IAHxB,EAKE,MAAC,MAAD,QACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC;AAAX,OACE,yBADF,CADF,EAIE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC;AAAX,OACE,0BADF,CAJF,EAOE,MAAC,SAAD,EAAeQ,SAAf,CAPF,CALF,CADF;AAiBD;;AAtDqB;;AAyDxB,eAAeV,SAAS,CAACC,KAAD,CAAxB","sourcesContent":["import chalk from \"chalk\"\nimport App from \"next/app\"\nimport { Provider } from \"react-redux\"\nimport Router from 'next/router'\nimport Link from 'next/link'\nimport axios from 'axios'\nimport \"antd/dist/antd.css\"\nimport MyContext from \"../lib/my-context\"\nimport Layout from \"../components/Layout\"\nimport PageLoading from '../components/PageLoading'\nimport withRedux from \"../lib/with-redux\"\n\nclass MyApp extends App {\n  static async getInitialProps(ctx) {\n    const { Component } = ctx;\n    console.log(chalk.green(\"app init\"));\n    let pageProps = {};\n    if (Component && Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n    return {\n      pageProps,\n    };\n  }\n  state = {\n    loading: false\n  }\n  componentDidMount() {\n    Router.events.on('routeChangeStart', this.startLoading)\n    Router.events.on('routeChangeComplete', this.stopLoading)\n    Router.events.on('routeChangeError', this.stopLoading)\n    axios.get('/github/search/repositories?q=react')\n      .then(resp => {\n        console.log(resp);\n      })\n  }\n  componentWillUnmount() {\n    Router.events.off('routeChangeStart', this.startLoading)\n    Router.events.off('routeChangeComplete', this.stopLoading)\n    Router.events.off('routeChangeError', this.stopLoading)\n  }\n  startLoading = () => {\n    this.setState({ loading: true })\n  }\n  stopLoading = () => {\n    this.setState({ loading: false })\n  }\n  render() {\n    const { Component, pageProps, reduxStore } = this.props;\n    return (\n      <Provider store={reduxStore}>\n        {\n          this.state.loading ? \n          (<PageLoading />) : null\n        }\n        <Layout>\n          <Link href=\"/\">\n            <a>Index</a>\n          </Link>\n          <Link href=\"/detail\">\n            <a>Detail</a>\n          </Link>\n          <Component {...pageProps} />\n        </Layout>\n      </Provider>\n    );\n  }\n}\n\nexport default withRedux(MyApp);\n"]},"metadata":{},"sourceType":"module"}