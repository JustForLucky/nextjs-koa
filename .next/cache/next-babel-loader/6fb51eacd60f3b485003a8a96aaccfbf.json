{"ast":null,"code":"var _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nvar axios = require('axios');\n\nvar isServer = false;\nvar github_base_url = 'https://api.github.com';\n\nfunction requestGithub(_x, _x2, _x3) {\n  return _requestGithub.apply(this, arguments);\n}\n\nfunction _requestGithub() {\n  _requestGithub = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(method, url, data) {\n    var headers,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            headers = _args.length > 3 && _args[3] !== undefined ? _args[3] : {};\n            _context.next = 3;\n            return axios({\n              method: method,\n              url: \"\".concat(github_base_url, \"/\").concat(url),\n              data: data,\n              headers: headers\n            });\n\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _requestGithub.apply(this, arguments);\n}\n\nfunction request(_x4, _x5, _x6) {\n  return _request.apply(this, arguments);\n}\n\nfunction _request() {\n  _request = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref, req, res) {\n    var _ref$method, method, url, _ref$data, data, headers, session, githubAuth;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _ref$method = _ref.method, method = _ref$method === void 0 ? 'GET' : _ref$method, url = _ref.url, _ref$data = _ref.data, data = _ref$data === void 0 ? {} : _ref$data;\n\n            if (url) {\n              _context2.next = 3;\n              break;\n            }\n\n            throw new Error('url must provide');\n\n          case 3:\n            if (!isServer) {\n              _context2.next = 11;\n              break;\n            }\n\n            headers = {};\n            session = req.session;\n            githubAuth = session.githubAuth || {};\n\n            if (githubAuth.access_token) {\n              headers['Authorization'] = \"\".concat(githubAuth.token_type, \" \").concat(githubAuth.access_token);\n            }\n\n            _context2.next = 10;\n            return requestGithub(method, url, data, headers);\n\n          case 10:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 11:\n            _context2.next = 13;\n            return axios({\n              method: method,\n              url: \"/github\".concat(url),\n              data: data\n            });\n\n          case 13:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _request.apply(this, arguments);\n}\n\nmodule.exports = {\n  request: request,\n  requestGithub: requestGithub\n};","map":{"version":3,"sources":["/Users/lili/projects/nextjs-koa/lib/api.js"],"names":["axios","require","isServer","github_base_url","requestGithub","method","url","data","headers","request","req","res","Error","session","githubAuth","access_token","token_type","module","exports"],"mappings":";;;;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAMC,QAAQ,QAAd;AAEA,IAAMC,eAAe,GAAG,wBAAxB;;SAEeC,a;;;;;4EAAf,iBAA6BC,MAA7B,EAAqCC,GAArC,EAA0CC,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgDC,YAAAA,OAAhD,2DAA0D,EAA1D;AAAA;AAAA,mBACiBR,KAAK,CAAC;AACfK,cAAAA,MAAM,EAANA,MADe;AAEfC,cAAAA,GAAG,YAAKH,eAAL,cAAwBG,GAAxB,CAFY;AAGfC,cAAAA,IAAI,EAAJA,IAHe;AAIfC,cAAAA,OAAO,EAAPA;AAJe,aAAD,CADtB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SASeC,O;;;;;sEAAf,wBAA0DC,GAA1D,EAA+DC,GAA/D;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAyBN,MAAzB,EAAyBA,MAAzB,4BAAkC,KAAlC,gBAAyCC,GAAzC,QAAyCA,GAAzC,mBAA8CC,IAA9C,EAA8CA,IAA9C,0BAAoD,EAApD;;AAAA,gBACSD,GADT;AAAA;AAAA;AAAA;;AAAA,kBAEc,IAAIM,KAAJ,CAAU,kBAAV,CAFd;;AAAA;AAAA,iBAIQV,QAJR;AAAA;AAAA;AAAA;;AAKcM,YAAAA,OALd,GAKwB,EALxB;AAMcK,YAAAA,OANd,GAMwBH,GAAG,CAACG,OAN5B;AAOcC,YAAAA,UAPd,GAO2BD,OAAO,CAACC,UAAR,IAAsB,EAPjD;;AAQQ,gBAAIA,UAAU,CAACC,YAAf,EAA6B;AACzBP,cAAAA,OAAO,CAAC,eAAD,CAAP,aAA8BM,UAAU,CAACE,UAAzC,cAAuDF,UAAU,CAACC,YAAlE;AACH;;AAVT;AAAA,mBAWqBX,aAAa,CAACC,MAAD,EAASC,GAAT,EAAcC,IAAd,EAAoBC,OAApB,CAXlC;;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAaiBR,KAAK,CAAC;AACfK,cAAAA,MAAM,EAANA,MADe;AAEfC,cAAAA,GAAG,mBAAYA,GAAZ,CAFY;AAGfC,cAAAA,IAAI,EAAJA;AAHe,aAAD,CAbtB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAoBAU,MAAM,CAACC,OAAP,GAAiB;AACbT,EAAAA,OAAO,EAAPA,OADa;AAEbL,EAAAA,aAAa,EAAbA;AAFa,CAAjB","sourcesContent":["const axios = require('axios')\n\nconst isServer = typeof window === 'undefined'\n\nconst github_base_url = 'https://api.github.com'\n\nasync function requestGithub(method, url, data, headers = {}) {\n    return await axios({\n        method,\n        url: `${github_base_url}/${url}`,\n        data,\n        headers\n    })\n}\n\nasync function request({ method = 'GET', url, data ={} }, req, res) {\n    if (!url) {\n        throw new Error('url must provide')\n    }\n    if (isServer) {\n        const headers = {}\n        const session = req.session\n        const githubAuth = session.githubAuth || {}\n        if (githubAuth.access_token) {\n            headers['Authorization'] = `${githubAuth.token_type} ${githubAuth.access_token}`\n        }\n        return await requestGithub(method, url, data, headers)\n    }\n    return await axios({\n        method,\n        url: `/github${url}`,\n        data\n    })\n}\n\nmodule.exports = {\n    request,\n    requestGithub\n}"]},"metadata":{},"sourceType":"script"}